#!/usr/bin/env bash

function main() {
    local base=${PWD}
    local command=${1-install}; shift
    [[ -f ${base}/.env ]] && . ${base}/.env

    echo "remove public directory"
    rm -rf ${base}/source

    echo "${command} composer packages"
    composer ${command} --no-plugins --no-scripts $@
    composer install $@

    echo "link resources in public directory"
    declare -A links=(
        ['out/downloads']='downloads'
        ['out/pictures/master']='pictures/master'
        ['out/pictures/media']='pictures/media'
        ['out/pictures/promo']='pictures/promo'
        ['out/pictures/vendor']='pictures/vendor'
        ['migration/project_data']='migration'
    )

    for link in "${!links[@]}"; do
        linkResource ${link} ${links[$link]}
    done

    [[ -z ${DB_STATE} ]] || rm -rf ${base}/source/Setup

    cat <<EOF > ${base}/source/config.inc.php
<?php

call_user_func(function () {
    require __DIR__ . '/../vendor/autoload.php';
    require __DIR__ . '/config.inc.php.dist';
    if (class_exists(\Dotenv\Dotenv::class)) {
        \Dotenv\Dotenv::create(INSTALLATION_ROOT_PATH)->overload();
    }

    \$this->sShopDir    = OX_BASE_PATH;
    \$this->sCompileDir = OX_BASE_PATH . 'tmp/';
    \$this->dbHost      = getenv('DB_HOST') ?: 'localhost';
    \$this->dbPort      = getenv('DB_PORT') ?: 3306;
    \$this->dbName      = getenv('DB_NAME') ?: '<dbName>';
    \$this->dbUser      = getenv('DB_USER') ?: '<dbUser>';
    \$this->dbPwd       = getenv('DB_PASSWORD') ?: '<dbPwd>';
    \$this->sShopURL    = getenv('SHOP_URL') ?: 'localhost';
    \$this->sSSLShopURL = getenv('SHOP_URL') ?: 'localhost';
    \$this->sAdminEmail = getenv('SHOP_ADMIN') ?: 'webmaster@localhost';
    \$this->iDebug      = getenv('SHOP_DEBUG') ?: 0;

    \$configFile = INSTALLATION_ROOT_PATH . (getenv('SHOP_CONFIG') ?:  '/config/shop.php');
    /** @noinspection PhpIncludeInspection */
    file_exists(\$configFile) && require \$configFile;
});

EOF
    chmod 444 ${base}/source/config.inc.php
}

function linkResource() {
    local base=${PWD} dst=${base}/source/${1} link=${SHOP_RESOURCES-resources/}${2}

    if [[ -e ${base}/${link} ]]; then
        local rel=${1//[^\/]}
        rel=$(printf '../%.0s' $(seq 0 ${#rel}))
		mkdir -p ${dst} 2>/dev/null
		rm -rf ${dst}
		ln -sf ${rel}${link} ${dst}
        echo "${dst}  ->  ${rel}${link}"
    fi
}

main $@
