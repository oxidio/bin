#!/usr/bin/env bash
# Copyright (C) oxidio. See LICENSE file for license details.
# shellcheck source=.

function main() {
    local base=${PWD}
    [[ -f "$base"/.env ]] && . "$base"/.env
    rm -rf "$base/source" "$base/var"
    composer install "$@"

    [[ -z ${DB_STATE} ]] || rm -rf "$base/source/Setup"

    cat <<EOF > "$base/source/config.inc.php"
<?php
/**
 * Copyright (C) oxidio. See LICENSE file for license details.
 */

call_user_func(function () {
    require __DIR__ . '/../vendor/autoload.php';
    require __DIR__ . '/config.inc.php.dist';
    /** @var OxidEsales\EshopCommunity\Core\Config|BootstrapConfigFileReader \$this */
    class_exists(Oxidio\Bootstrap::class) && Oxidio\Bootstrap::bootstrap(\$this);
});

EOF
    [[ -z ${DB_STATE} ]] || chmod 444 "$base"/source/config.inc.php
    return 0;
}

function publicLinks() {
    local line dst link rel base=${PWD}
    for line in "$@"; do
        link=$(echo "$line"| cut -d: -f 1)
        dst=$(echo "$line"| cut -d: -f 2)
        if [[ -e ${base}/${link} ]]; then
            rel=${dst//[^\/]}
            rel=$(printf '../%.0s' $(seq 0 ${#rel}))
            mkdir -p "$base/source/$dst" 2>/dev/null
            rm -rf "$base/source/$dst"
            ln -sf "$rel$link" "$base/source/$dst"
            echo "$base/source/$dst  ->  $rel$link"
        fi
    done
}

main "$@"
