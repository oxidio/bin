#!/usr/bin/env bash
# Copyright (C) oxidio. See LICENSE file for license details.
# shellcheck source=.

function main() {
    # https://stackoverflow.com/a/246128/3263617
    local dir source base=$PWD
    source="${BASH_SOURCE[0]}"
    while [ -h "$source" ]; do # resolve $source until the file is no longer a symlink
        dir="$(cd -P "$(dirname "$source")" >/dev/null 2>&1 && pwd)"
        source="$(readlink "$source")"
        # if $source was a relative symlink, we need to resolve it relative to the path where the symlink file was located
        [[ $source != /* ]] && source="$dir/$source"
    done
    dir="$(cd -P "$(dirname "$source")" >/dev/null 2>&1 && pwd)"

    . "$dir/../src/functions.sh"

    [[ -f "$base/.env" ]] && . "$base/.env"

    local i postUpdate updateCache updateShop replace positional
    local args='--no-suggest' env=prod links=YES conf=YES action=install autoload=dump-autoload
    for i in "$@"; do
        case $i in
        @*)
            env="${i#*@}"
            shift
            ;;

        --no-links)
            links=
            shift
            ;;

        --no-conf)
            conf=
            shift
            ;;

        --no-install)
            action=
            shift
            ;;

        --update-shop)
            updateShop=YES
            shift
            ;;

        --update-cache)
            updateCache=YES
            shift
            ;;

        --plugins)
            postUpdate=YES
            shift
            ;;

        update)
            action=update
            shift
            ;;

        --no-autoload)
            autoload=
            shift
            ;;

        replace)
            replace=YES
            shift
            ;;

        *)
            positional+=("$1")
            shift
            ;;
        esac
    done
    set -- "${positional[@]}"

    export COMPOSER_ALLOW_XDEBUG=0
    export COMPOSER_MEMORY_LIMIT=-1

    [[ -x ${base}/vendor/bin/oxidio-install ]] || {
        postUpdate=YES
        autoload=dump-autoload
    }

    if [[ $env != 'prod' ]]; then
      echo -e "\e[92m@dev\e[0m"
    else
      echo -e "\e[92m@prod\e[0m"
      args+=' --no-dev --prefer-dist'
      [[ -n "$autoload" ]] && autoload+=" --optimize --classmap-authoritative"
    fi

    [[ -n "$action" ]] && {
        [[ -n "$updateShop" ]] && oxidioBackup "$base/source"
        composer $action --no-plugins --no-scripts $args
        [[ -n "$postUpdate" ]] && composer run-script post-update-cmd
        [[ -n "$autoload" ]] && composer $autoload
    }

    [[ -n "$updateCache" ]] && {
        oxidioBackup "$base/source/tmp/smarty/"
        oxidioBackup "$base/source/tmp/container_cache.php"
    }

    [[ -n "$replace" ]] && {
        composerReplace "$@"
    }

    [[ -n "$links" ]] && {
        oxidioCreateSourceLinks
    }

    [[ -n "$conf" ]] && {
        oxidioCreateConfigIncPhp
        [[ -z ${DB_STATE} ]] || chmod 444 "$base"/source/config.inc.php
        [[ -z ${DB_STATE} ]] || rm -rf "$base/source/Setup"
    }
}

main "$@"
