#!/usr/bin/env bash

function main() {
    local base=${PWD}

    echo "remove public directory"
    rm -rf ${base}/source

    echo 'install composer packages'
    composer install --no-plugins --no-scripts $@
    composer install $@

    echo "link resources in public directory"
    declare -A links=(
        ['../../resources/data/downloads']='out/downloads'
        ['../../../resources/data/pictures/master']='out/pictures/master'
        ['../../../resources/data/pictures/media']='out/pictures/media'
        ['../../../resources/data/pictures/promo']='out/pictures/promo'
        ['../../../resources/data/pictures/vendor']='out/pictures/vendor'
        ['../../resources/migration']='migration/project_data'
    )
    for link in "${!links[@]}"; do
        link ${base}/source/${links[$link]} ${link}
    done

    rm -rf ${base}/source/Setup

    cat <<EOF > ${base}/source/config.inc.php
<?php

call_user_func(function () {
    require __DIR__ . '/../vendor/autoload.php';
    require __DIR__ . '/config.inc.php.dist';
    if (class_exists(\Dotenv\Dotenv::class)) {
        \Dotenv\Dotenv::create(INSTALLATION_ROOT_PATH)->overload();
    }

    \$this->sShopDir    = OX_BASE_PATH;
    \$this->sCompileDir = OX_BASE_PATH . 'tmp/';
    \$this->dbHost      = getenv('DB_HOST') ?: 'localhost';
    \$this->dbPort      = getenv('DB_PORT') ?: 3306;
    \$this->dbName      = getenv('DB_NAME') ?: '<dbName>';
    \$this->dbUser      = getenv('DB_USER') ?: '<dbUser>';
    \$this->dbPwd       = getenv('DB_PASSWORD') ?: '<dbPwd>';
    \$this->sShopURL    = getenv('SHOP_URL') ?: 'localhost';
    \$this->sSSLShopURL = getenv('SHOP_URL') ?: 'localhost';
    \$this->sAdminEmail = getenv('SHOP_ADMIN') ?: 'webmaster@localhost';
    \$this->iDebug      = getenv('SHOP_DEBUG') ?: 0;

    \$configFile = INSTALLATION_ROOT_PATH . (getenv('SHOP_CONFIG') ?:  '/config/shop.php');
    /** @noinspection PhpIncludeInspection */
    file_exists(\$configFile) && require \$configFile;
});

EOF
    chmod 444 ${base}/source/config.inc.php
}

function link() {
    echo "$1  ->  $2"
    mkdir -p $1 2>/dev/null
    rm -rf $1
    ln -sf $2 $1
}

main
